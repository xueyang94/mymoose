[Tests]
  issues = '#15640 #19472'
  design = 'navier_stokes/insfv.md NSFVAction.md'
  [1d-rc]
    type = 'Exodiff'
    input = 1d-rc.i
    exodiff = 1d-rc_out.e
    method = "!dbg"
    requirement = 'The system shall be able to model free-slip conditions in a 1D channel; specifically the tangential velocity shall have a uniform value of unity and the pressure shall not change.'
    ad_indexing_type = 'global'
  []
  [free-slip]
    type = 'Exodiff'
    input = 2d-rc.i
    exodiff = 2d-rc_out.e
    method = "!dbg"
    requirement = 'The system shall be able to model free-slip conditions in a channel; specifically the tangential velocity shall have a uniform value of unity, the normal velocity shall have a uniform value of zero, and the pressure shall not change.'
    ad_indexing_type = 'global'
    valgrind = HEAVY
  []
  [free-slip-action]
    type = 'Exodiff'
    input = 2d-rc-action.i
    exodiff = 2d-rc-action_out.e
    method = "!dbg"
    requirement = 'The system shall be able to model free-slip conditions in a channel using the NSFV action.'
    ad_indexing_type = 'global'
    valgrind = HEAVY
  []
  [no-slip]
    type = 'Exodiff'
    input = 2d-rc-no-slip.i
    exodiff = 2d-rc-no-slip_out.e
    method = "!dbg"
    requirement = 'The system shall be able to model no-slip conditions in a channel; specifically, moving down the channel, the tangential velocity shall develop a parabolic profile.'
    abs_zero = 1e-9
    ad_indexing_type = 'global'
    cli_args = '-pc_type lu -pc_factor_shift_type NONZERO'
    valgrind = HEAVY
  []
  [no-slip-action]
    type = 'Exodiff'
    input = 2d-rc-no-slip-action.i
    exodiff = 2d-rc-no-slip-action_out.e
    method = "!dbg"
    requirement = 'The system shall be able to model no-slip conditions in a channel using incompressible Navier Stokes action.'
    abs_zero = 1e-9
    ad_indexing_type = 'global'
    issues = '#19472'
    cli_args = '-pc_type lu -pc_factor_shift_type NONZERO'
    valgrind = HEAVY
  []
  [scalar-transport]
    type = 'Exodiff'
    input = 2d-scalar-transport.i
    exodiff = 2d-scalar-transport_out.e
    method = "!dbg"
    requirement = 'The system shall be able to transport arbitrary scalar field variables in a fluid flow field.'
    ad_indexing_type = 'global'
    design = 'INSFVScalarFieldAdvection.md'
    issues = '#16732'
    valgrind = HEAVY
  []
  [scalar-transport-action]
    type = 'Exodiff'
    input = 2d-scalar-transport-action.i
    exodiff = 2d-scalar-transport-action_out.e
    method = "!dbg"
    requirement = 'The system shall be able to create and transport scalar field variables in a fluid flow field using the NSFVAction syntax.'
    ad_indexing_type = 'global'
    design = 'NSFVAction.md'
    issues = '#19472'
    valgrind = HEAVY
  []
  [external-scalar-transport-action]
    type = 'Exodiff'
    input = 2d-scalar-transport-action.i
    exodiff = 2d-scalar-transport-action_out.e
    method = "!dbg"
    requirement = 'The system shall be able to transport an externally-generated scalar field variables in a fluid flow field using the NSFVAction syntax.'
    ad_indexing_type = 'global'
    cli_args = "Variables/inactive='' Modules/NavierStokesFV/velocity_variable='vel_x vel_y' Modules/NavierStokesFV/pressure_variable='pressure' Modules/NavierStokesFV/fluid_temperature_variable='T_fluid'"
    design = 'NSFVAction.md'
    issues = '#19472'
    valgrind = HEAVY
  []
  [momentum-outflow-bcs]
    type = 'Exodiff'
    input = 2d-rc-no-slip-outflow-bcs.i
    exodiff = 2d-rc-no-slip-outflow-bcs_out.e
    requirement = 'The system shall be able to use flux boundary conditions for the momentum and match results produced by using flux kernels.'
    design = 'INSFVMomentumAdvectionOutflowBC.md'
    issues = '#16854'
    ad_indexing_type = 'global'
    abs_zero = 2e-9
    valgrind = HEAVY
  []
  [extrapolated-outlet-pressure]
    type = 'Exodiff'
    input = 2d-rc-no-slip-extrapolated-outlet-pressure.i
    exodiff = 2d-rc-no-slip-extrapolated-outlet-pressure_out.e
    requirement = 'The system shall be able to extrapolate a pressure value at a fully developed outflow boundary and use a mean pressure approach to eliminate the nullspace for the pressure.'
    design = 'INSFVMassAdvectionOutflowBC.md'
    issues = '#16854'
    ad_indexing_type = 'global'
    abs_zero = 6e-9
    valgrind = HEAVY
    cli_args = '-pc_type lu -sub_pc_factor_shift_type NONZERO'
  []
  [mixing-length]
    type = 'Exodiff'
    input = 2d-mixing-length.i
    exodiff = 2d-mixing-length_out.e
    requirement = 'The system shall be able to model the effect of Reynolds-averaged parameters on the momentum and passive scalar advection equations using a mixing length model'
    ad_indexing_type = 'global'
    design = 'navier_stokes/rans_theory.md'
    issues = '#16794 #16937'
    mesh_mode = REPLICATED
  []
  [mixing-length-action]
    type = 'Exodiff'
    input = 2d-mixing-length-action.i
    exodiff = 2d-mixing-length-action_out.e
    requirement = 'The system shall be able to model the effect of Reynolds-averaged parameters on the momentum and passive scalar advection equations using a mixing length model and the NSFVAction syntax'
    ad_indexing_type = 'global'
    issues = '#19472'
    mesh_mode = REPLICATED
  []
  [mixing-length-jac]
    type = 'PetscJacobianTester'
    input = 2d-mixing-length.i
    run_sim = True
    requirement = 'The system shall be able to model the effect of Reynolds-averaged parameters on the momentum and passive scalar advection equations using a mixing length model and show a perfect Jacobian'
    ad_indexing_type = 'global'
    design = 'navier_stokes/rans_theory.md'
    issues = '#16794 #16937'
    mesh_mode = REPLICATED
    ratio_tol = 3e-8
    difference_tol = 1e-6
    cli_args = "Mesh/gen/nx=2 Mesh/gen/ny=2"
    only_final_jacobian = True
  []
  [linear-friction]
    type = 'Exodiff'
    input = 2d-rc-friction.i
    exodiff = 2d-rc-friction_out.e
    requirement = 'The system shall be able to model linear volumetric friction in a channel.'
    issues = '#16872'
    ad_indexing_type = 'global'
    design = 'INSFVMomentumFriction.md'
  []
  [quadratic-friction]
    type = 'Exodiff'
    input = 2d-rc-friction.i
    exodiff = 2d-rc-friction-quad_out.e
    requirement = 'The system shall be able to model quadratic volumetric friction in a channel.'
    issues = '#16872'
    ad_indexing_type = 'global'
    cli_args = "Outputs/file_base='2d-rc-friction-quad_out' FVKernels/inactive='u_friction_linear v_friction_linear'"
    design = 'INSFVMomentumFriction.md'
  []
  [linear-friction-action]
    type = 'Exodiff'
    input = 2d-rc-friction-action.i
    exodiff = 2d-rc-friction-action_out.e
    requirement = 'The system shall be able to model linear volumetric friction in a channel using NSFVAction syntax.'
    issues = '#19472'
    ad_indexing_type = 'global'
  []
  [quadratic-friction-action]
    type = 'Exodiff'
    input = 2d-rc-friction-action.i
    exodiff = 2d-rc-friction-action-quad_out.e
    requirement = 'The system shall be able to model quadratic volumetric friction in a channel using NSFVAction syntax.'
    issues = '#19472'
    ad_indexing_type = 'global'
    cli_args = "Modules/NavierStokesFV/friction_types='forchheimer' Outputs/file_base='2d-rc-friction-action-quad_out'"
  []
  [ambient-convection]
    type = 'CSVDiff'
    input = 2d-rc-ambient-convection.i
    csvdiff = 2d-rc-ambient-convection_out.csv
    requirement = 'The system shall be able to model ambient volumetric convection in a channel.'
    issues = '#16948'
    ad_indexing_type = 'global'
    design = 'NSFVEnergyAmbientConvection.md'
  []
  [ambient-convection-action]
    type = 'CSVDiff'
    input = 2d-rc-ambient-convection-action.i
    csvdiff = 2d-rc-ambient-convection-action_out.csv
    requirement = 'The system shall be able to model ambient volumetric convection in a channel using the Navier-Stokes action.'
    issues = '#19472'
    ad_indexing_type = 'global'
    design = 'NSFVEnergyAmbientConvection.md'
  []
  [triangles]
    requirement = 'The system shall be able to run incompressible Navier-Stokes channel-flow simulations with'
    issues = '#16822'
    design = 'MooseVariableFV.md'
    [tris]
      type = 'Exodiff'
      input = 2d-rc-no-slip.i
      exodiff = 2d-rc-no-slip-tris.e
      cli_args = 'Mesh/gen/elem_type=TRI3 GlobalParams/two_term_boundary_expansion=false Outputs/file_base=2d-rc-no-slip-tris'
      ad_indexing_type = 'global'
      valgrind = HEAVY
      detail = 'two-dimensional triangular elements'
      abs_zero = 1e-9
    []
    [tets]
      type = 'Exodiff'
      input = 3d-rc-no-slip.i
      exodiff = 3d-rc-no-slip_out.e
      ad_indexing_type = 'global'
      detail = 'three-dimensional tetrahedral elements'
      mumps = true
      heavy = true
    []
  []
  [3d-rc]
    type = 'Exodiff'
    input = 3d-rc.i
    exodiff = 3d-rc_out.e
    method = "!dbg"
    requirement = 'The system shall be able to model free-slip conditions in a 3D square channel; specifically the tangential velocity shall have a uniform value of unity and the pressure shall not change.'
    ad_indexing_type = 'global'
  []
  [singular_two_term_expansion]
    type = 'Exodiff'
    input = one-elem-wide-channel.i
    ad_indexing_type = 'global'
    exodiff = one-elem-wide-channel_out.e
    issues = '#16822'
    requirement = 'The system shall be able to compute gradients, when extrapolated boundary face values make the gradient computation singular, by catching the singularity error and re-running without doing boundary face value extrapolation.'
    # currently throws a warning which is non-deterministic with threads, see #20326
    max_threads = 1
  []
  [discontinuous]
    type = 'Exodiff'
    ad_indexing_type = 'global'
    input = discontinuous-body-forces.i
    exodiff = discontinuous-body-forces_out.e
    design = INSFVRhieChowInterpolator.md
    requirement = 'The system shall show a monotone pressure profile in the presence of discontinuous body forces, in this case a transient from free flow to linear drag.'
  []
  [transient]
    type = 'Exodiff'
    input = 2d-rc-transient.i
    exodiff = 2d-rc-transient_out.e
    method = "!dbg"
    requirement = 'The system shall be able to simulate a transient flow in a channel with enthalpy as an advected quantity.'
    ad_indexing_type = 'global'
    abs_zero = 6e-9
    valgrind = HEAVY
  []
  [transient-action]
    type = 'Exodiff'
    input = 2d-rc-transient-action.i
    exodiff = 2d-rc-transient-action_out.e
    method = "!dbg"
    requirement = 'The system shall be able to simulate a transient flow in a channel with enthalpy as an advected quantity using the NSFV action syntax.'
    ad_indexing_type = 'global'
    abs_zero = 6e-9
    valgrind = HEAVY
  []
[]
