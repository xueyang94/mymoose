[Tests]
  issues = '#6881 #14057'
  design = '/variables/ArrayMooseVariable.md'
  [test]
    type = 'Exodiff'
    input = 'array_diffusion_test.i'
    exodiff = 'array_diffusion_test_out.e'
    requirement = 'The system shall provide array diffusion kernels on an array variable.'
  []
  [test_diffusion_reaction]
    type = 'Exodiff'
    input = 'array_diffusion_reaction.i'
    exodiff = 'array_diffusion_reaction_out.e'
    requirement = 'The system shall provide array reaction kernels on an array variable.'
  []
  [test_diffusion_reaction_dg]
    type = 'Exodiff'
    input = 'array_diffusion_reaction_dg.i'
    exodiff = 'array_diffusion_reaction_dg_out.e'
    requirement = 'The system shall provide array DG diffusion kernels on an elemental array variable.'
  []
  [test_diffusion_reaction_coupling]
    type = 'Exodiff'
    input = 'array_diffusion_reaction_coupling.i'
    exodiff = 'array_diffusion_reaction_coupling_out.e'
    requirement = 'The system shall provide coupling of standard variables in array kernels.'
  []
  [test_diffusion_reaction_other_coupling]
    type = 'Exodiff'
    input = 'array_diffusion_reaction_other_coupling.i'
    exodiff = 'array_diffusion_reaction_other_coupling_out.e'
    requirement = 'The system shall provide coupling of array variables in standard kernels.'
  []
  [save_in]
    requirement = 'The system shall provide residual save-in and Jacobian diagonal save-in for'
    [array]
      type = 'Exodiff'
      input = 'array_save_in.i'
      exodiff = 'array_save_in_out.e'

      detail = 'array and'
    []
    [test_standard_save_in]
      # using standard variables to produce the exact output of the previous test
      type = 'Exodiff'
      input = 'standard_save_in.i'
      exodiff = 'array_save_in_out.e'
      prereq = save_in/array

      detail = 'standard variables.'
    []
  []
  [test_diffusion_reaction_transient]
    type = 'Exodiff'
    input = 'array_diffusion_reaction_transient.i'
    exodiff = 'array_diffusion_reaction_transient_out.e'
    requirement = 'The system shall provide array time derivative kernels on an array variable.'
  []
  [test_body_force]
    type = 'Exodiff'
    input = 'array_body_force.i'
    exodiff = 'array_body_force_out.e'
    requirement = 'The system shall provide array body-force kernels on an array variable.'
  []
[]
