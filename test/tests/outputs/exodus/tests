[Tests]
  issues = '#1927'
  design = 'outputs/Exodus.md'
  [./basic]
    type = 'Exodiff'
    input = 'exodus.i'
    exodiff = 'exodus_out.e'

    requirement = "The system shall support ExodusII output."
  [../]

  [./hdf5]
    type = 'RunCommand'
    prereq = 'basic'
    command = 'if ! type h5dump >/dev/null 2>&1; then echo "Could not run h5dump to test for HDF5"; exit 77; fi;
               if h5dump exodus_out.e >/dev/null 2>&1; then echo "h5dump found HDF5 where it should not be"; exit 1; fi;
               exit 0'

    requirement = "The system ExodusII output shall not use HDF5 unless requested."
  [../]

  [./input]
    # Moose runs with the output_input = true
    # \TODO Find a method for comparing files with and without information records
    type = 'CheckFiles'
    input = 'exodus_input.i'
    check_files = 'exodus_input_out.e'

    requirement = "The system shall support including the executed input file within the ExodusII output."
  [../]

  [./enable_initial]
    type = 'Exodiff'
    input = 'exodus_enable_initial.i'
    exodiff = 'exodus_enable_initial_out.e'

    requirement = "The system shall support inclusion of initial condition data within the ExodusII output."
  [../]

  [./output_all]
    type = 'Exodiff'
    input = 'variable_toggles.i'
    exodiff = 'variable_toggles_out.e'

    requirement = "The system shall support writing non-linear, auxililary, scalar, and postprocessor variables to ExodusII format."
  [../]

  [./hide_output]
    type = 'Exodiff'
    input = 'hide_variables.i'
    exodiff = 'hide_variables_out.e'

    requirement = "The system shall support the exclusion of non-linear, scalar, and postprocessor variables from ExodusII output."
  [../]

  [./invalid_hide]
    type = 'RunException'
    input = 'invalid_hide_variables.i'
    expect_err = 'Output\(s\) do not exist \(must be variable, scalar, postprocessor, or vector postprocessor\):'

    requirement = "The system shall error if the supplied names for including or excluding variables is invalid."
  [../]

  [./nodal_output]
    type = 'Exodiff'
    input = 'exodus_nodal.i'
    exodiff = 'exodus_nodal_out.e'

    requirement = "The system shall support outputting elemental and scalar variables as nodal variables within ExodusII output."
  [../]

  [./discontinuous]
    type = 'Exodiff'
    input = 'exodus_discontinuous.i'
    exodiff = 'exodus_discontinuous_out.e'

    requirement = "The system shall support outputting discontinuous finite element types with the ExodusII format."
  [../]
[]
